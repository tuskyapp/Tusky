{
  "formatVersion": 1,
  "database": {
    "version": 11,
    "identityHash": "a9e06c81b8589997de1f38424aedd403",
    "entities": [
      {
        "tableName": "TootEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `text` TEXT, `urls` TEXT, `descriptions` TEXT, `contentWarning` TEXT, `inReplyToId` TEXT, `inReplyToText` TEXT, `inReplyToUsername` TEXT, `visibility` INTEGER)",
        "fields": [
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "urls",
            "columnName": "urls",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "descriptions",
            "columnName": "descriptions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentWarning",
            "columnName": "contentWarning",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inReplyToId",
            "columnName": "inReplyToId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inReplyToText",
            "columnName": "inReplyToText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inReplyToUsername",
            "columnName": "inReplyToUsername",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "AccountEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `domain` TEXT NOT NULL, `accessToken` TEXT NOT NULL, `isActive` INTEGER NOT NULL, `accountId` TEXT NOT NULL, `username` TEXT NOT NULL, `displayName` TEXT NOT NULL, `profilePictureUrl` TEXT NOT NULL, `notificationsEnabled` INTEGER NOT NULL, `notificationsMentioned` INTEGER NOT NULL, `notificationsFollowed` INTEGER NOT NULL, `notificationsReblogged` INTEGER NOT NULL, `notificationsFavorited` INTEGER NOT NULL, `notificationSound` INTEGER NOT NULL, `notificationVibration` INTEGER NOT NULL, `notificationLight` INTEGER NOT NULL, `defaultPostPrivacy` INTEGER NOT NULL, `defaultMediaSensitivity` INTEGER NOT NULL, `alwaysShowSensitiveMedia` INTEGER NOT NULL, `mediaPreviewEnabled` INTEGER NOT NULL, `lastNotificationId` TEXT NOT NULL, `activeNotifications` TEXT NOT NULL, `emojis` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "domain",
            "columnName": "domain",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accessToken",
            "columnName": "accessToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "profilePictureUrl",
            "columnName": "profilePictureUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationsEnabled",
            "columnName": "notificationsEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsMentioned",
            "columnName": "notificationsMentioned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsFollowed",
            "columnName": "notificationsFollowed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsReblogged",
            "columnName": "notificationsReblogged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsFavorited",
            "columnName": "notificationsFavorited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationSound",
            "columnName": "notificationSound",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationVibration",
            "columnName": "notificationVibration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationLight",
            "columnName": "notificationLight",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultPostPrivacy",
            "columnName": "defaultPostPrivacy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultMediaSensitivity",
            "columnName": "defaultMediaSensitivity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "alwaysShowSensitiveMedia",
            "columnName": "alwaysShowSensitiveMedia",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaPreviewEnabled",
            "columnName": "mediaPreviewEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastNotificationId",
            "columnName": "lastNotificationId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "activeNotifications",
            "columnName": "activeNotifications",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_AccountEntity_domain_accountId",
            "unique": true,
            "columnNames": [
              "domain",
              "accountId"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_AccountEntity_domain_accountId` ON `${TABLE_NAME}` (`domain`, `accountId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "InstanceEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`instance` TEXT NOT NULL, `emojiList` TEXT, `maximumTootCharacters` INTEGER, PRIMARY KEY(`instance`))",
        "fields": [
          {
            "fieldPath": "instance",
            "columnName": "instance",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emojiList",
            "columnName": "emojiList",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "maximumTootCharacters",
            "columnName": "maximumTootCharacters",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "instance"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "TimelineStatusEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serverId` TEXT NOT NULL, `url` TEXT, `timelineUserId` INTEGER NOT NULL, `authorServerId` TEXT, `instance` TEXT, `inReplyToId` TEXT, `inReplyToAccountId` TEXT, `content` TEXT, `createdAt` INTEGER NOT NULL, `emojis` TEXT, `reblogsCount` INTEGER NOT NULL, `favouritesCount` INTEGER NOT NULL, `repliesCount` INTEGER NOT NULL, `reblogged` INTEGER NOT NULL, `favourited` INTEGER NOT NULL, `sensitive` INTEGER NOT NULL, `spoilerText` TEXT, `visibility` INTEGER, `attachments` TEXT, `mentions` TEXT, `application` TEXT, `reblogServerId` TEXT, `reblogAccountId` TEXT, PRIMARY KEY(`serverId`, `timelineUserId`), FOREIGN KEY(`authorServerId`, `timelineUserId`) REFERENCES `TimelineAccountEntity`(`serverId`, `timelineUserId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timelineUserId",
            "columnName": "timelineUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorServerId",
            "columnName": "authorServerId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "instance",
            "columnName": "instance",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inReplyToId",
            "columnName": "inReplyToId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inReplyToAccountId",
            "columnName": "inReplyToAccountId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblogsCount",
            "columnName": "reblogsCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favouritesCount",
            "columnName": "favouritesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "repliesCount",
            "columnName": "repliesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reblogged",
            "columnName": "reblogged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favourited",
            "columnName": "favourited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sensitive",
            "columnName": "sensitive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spoilerText",
            "columnName": "spoilerText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attachments",
            "columnName": "attachments",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mentions",
            "columnName": "mentions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "application",
            "columnName": "application",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblogServerId",
            "columnName": "reblogServerId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblogAccountId",
            "columnName": "reblogAccountId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "serverId",
            "timelineUserId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_TimelineStatusEntity_authorServerId_timelineUserId",
            "unique": false,
            "columnNames": [
              "authorServerId",
              "timelineUserId"
            ],
            "createSql": "CREATE  INDEX `index_TimelineStatusEntity_authorServerId_timelineUserId` ON `${TABLE_NAME}` (`authorServerId`, `timelineUserId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "TimelineAccountEntity",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "authorServerId",
              "timelineUserId"
            ],
            "referencedColumns": [
              "serverId",
              "timelineUserId"
            ]
          }
        ]
      },
      {
        "tableName": "TimelineAccountEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serverId` TEXT NOT NULL, `timelineUserId` INTEGER NOT NULL, `instance` TEXT NOT NULL, `localUsername` TEXT NOT NULL, `username` TEXT NOT NULL, `displayName` TEXT NOT NULL, `url` TEXT NOT NULL, `avatar` TEXT NOT NULL, `emojis` TEXT NOT NULL, PRIMARY KEY(`serverId`, `timelineUserId`))",
        "fields": [
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timelineUserId",
            "columnName": "timelineUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "instance",
            "columnName": "instance",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localUsername",
            "columnName": "localUsername",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "avatar",
            "columnName": "avatar",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "serverId",
            "timelineUserId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"a9e06c81b8589997de1f38424aedd403\")"
    ]
  }
}