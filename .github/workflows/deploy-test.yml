# Deploy Tusky Nightly on each push to develop

name: Deploy Tusky Nightly to Google Play

on:
  push:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check-and-build:
    uses: ./.github/workflows/check-and-build.yml
  deploy:
    runs-on: ubuntu-latest
    needs: check-and-build
    environment: Test
    env:
      BUILD_NUMBER: ${{ github.run_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Set versionCode
        run: |
          export VERSION_CODE=$(( ${BUILD_NUMBER} + 11000 ))
          sed -i'.original' -e "s/^\([[:space:]]*versionCode[[:space:]]*\)[0-9]*/\\1$VERSION_CODE/" app/build.gradle

      - name: Build Green aab
        run: ./gradlew app:bundleGreenRelease

      - uses: r0adkll/sign-android-release@f30bdd30588842ac76044ecdbd4b6d0e3e813478
        name: Sign Tusky Green aab
        id: sign_aab
        with:
          releaseDirectory: app/build/outputs/bundle/greenRelease
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Generate whatsnew
        id: generate-whatsnew
        run: |
          mkdir whatsnew
          git log -3 --pretty=%B | head -c 500 > whatsnew/whatsnew-en-US

      - name: Upload AAB to Google Play
        id: upload-release-asset-aab
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.keylesspalace.tusky.test
          releaseFiles: ${{steps.sign_aab.outputs.signedReleaseFile}}
          track: production
          whatsNewDirectory: whatsnew
          status: completed
          mappingFile: app/build/outputs/mapping/greenRelease/mapping.txt
